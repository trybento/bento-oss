/* Auto-generated by graphql-codegen. Do not edit.  */
/* Make query edits in the corresponding /graphql/*.graphql file */
/* eslint-disable */
import * as Types from '../../schema.types';

import { gql } from 'urql';
import { GuideQuery_Guide } from '../../queries/generated/Guide';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type GuideChangedVariables = Types.Exact<{
  guideEntityId: Types.Scalars['EntityId'];
}>;


export type GuideChanged = { __typename?: 'Subscription', guideChanged?: { __typename: 'EmbedGuide', id: string, entityId: any, name: string, theme: Types.ThemeType, type: Types.GuideTypeEnumType, description?: string | null, completionState?: Types.GuideCompletionState | null, completedAt?: any | null, doneAt?: any | null, savedAt?: any | null, state?: Types.GuideState | null, isViewed: boolean, isDestination: boolean, totalSteps: number, completedStepsCount: number, isSideQuest?: boolean | null, orderIndex: number, nextGuide?: any | null, previousGuide?: any | null, firstIncompleteModule?: any | null, firstIncompleteStep?: any | null, pageTargetingType: Types.GuidePageTargetingEnumType, pageTargetingUrl?: string | null, designType: Types.GuideDesignTypeEnumType, formFactor?: Types.GuideFormFactorEnumType | null, canResetOnboarding: boolean, isCyoa: boolean, branchedFromGuide?: any | null, modules: Array<{ __typename: 'EmbedGuideModule', id: string, entityId: any, name: string, orderIndex: number, nextModule?: any | null, previousModule?: any | null, guide?: any | null, totalStepsCount: number, completedStepsCount: number, isComplete: boolean, firstIncompleteStep?: any | null, steps: Array<{ __typename: 'EmbedStep', id: string, entityId: any, isComplete: boolean, completedAt?: any | null, wasCompletedAutomatically: boolean, manualCompletionDisabled: boolean, name: string, orderIndex: number, bodySlate?: any | null, hasViewedStep: boolean, state: Types.StepState, stepType: Types.StepTypeEnum, dismissLabel?: string | null, nextStepEntityId?: any | null, previousStepEntityId?: any | null, guide: any, module: any, completedByUser?: { __typename?: 'AccountUser', fullName?: string | null, email?: string | null } | null, branching: { __typename: 'EmbedBranching', key?: string | null, type?: Types.BranchingPathEntityType | null, question?: string | null, multiSelect: boolean, dismissDisabled: boolean, formFactor?: Types.BranchingFormFactorEnumType | null, branches?: Array<{ __typename: 'EmbedBranch', key?: string | null, label?: string | null, selected: boolean, style?: { __typename?: 'BranchingBaseStyle' } | { __typename: 'BranchingCardStyle', backgroundImageUrl?: string | null, backgroundImagePosition: Types.CyoaBackgroundImagePosition } | null }> | null }, ctas: Array<{ __typename?: 'EmbedStepCta', entityId: any, text: string, url?: string | null, type: Types.StepCtaTypeEnumType, style: Types.StepCtaStyleEnumType, destination?: { __typename?: 'EmbedStepCtaDestination', key: string, designType: Types.GuideDesignTypeEnumType, formFactor?: Types.GuideFormFactorEnumType | null, pageTargeting: { __typename?: 'PageTargeting', type: Types.GuidePageTargetingEnumType, url?: string | null } } | null, settings?: { __typename?: 'StepCtaSettingsType', bgColorField: string, textColorField: string, eventName?: string | null, markComplete?: boolean | null, opensInNewTab?: boolean | null } | null }>, mediaReferences: Array<{ __typename?: 'MediaReference', entityId: any, media: { __typename?: 'Media', type: Types.MediaTypeEnumType, url: string, meta: { __typename?: 'ImageMediaMeta', naturalWidth?: number | null, naturalHeight?: number | null } | { __typename?: 'NumberAttributeMediaMeta' } | { __typename?: 'VideoMediaMeta', videoId?: string | null, videoType?: string | null } }, settings: { __typename?: 'ImageMediaReferenceSettings', alignment?: string | null, fill?: string | null, hyperlink?: string | null, lightboxDisabled?: boolean | null } | { __typename?: 'NumberAttributeMediaReferenceSettings' } | { __typename?: 'VideoMediaReferenceSettings', alignment?: string | null, playsInline?: boolean | null } }>, inputs: Array<{ __typename?: 'EmbedInputStep', entityId: any, label: string, type: Types.InputStepFieldTypeEnumType, answer?: string | null, settings?: { __typename?: 'DropdownSettings', required: boolean, multiSelect: boolean, variation: Types.DropdownInputVariationEnumType, options: Array<{ __typename?: 'DropdownInputOption', label?: string | null, value?: string | null }> } | { __typename?: 'NpsSettings', required: boolean, helperText?: string | null } | { __typename?: 'NumberPollSettings', required: boolean, helperText?: string | null, minLabel?: string | null, minValue?: number | null, maxLabel?: string | null, maxValue?: number | null } | { __typename?: 'TextOrEmailSettings', placeholder?: string | null, required: boolean, helperText?: string | null, maxValue?: number | null } | null }> }> }>, branchedFromChoice?: { __typename?: 'EmbedGuideBranchedFromChoice', choiceKey?: string | null, branchingKey?: string | null } | null, formFactorStyle?: { __typename?: 'BannerStyle', bannerType: Types.BannerType, bannerPosition: Types.BannerPosition, backgroundColor?: string | null, textColor?: string | null, canDismiss?: boolean | null, ctasOrientation?: Types.CtasOrientation | null } | { __typename?: 'CardStyle', backgroundColor?: string | null, textColor?: string | null, stepBodyOrientation?: Types.StepBodyOrientation | null, mediaOrientation?: Types.MediaOrientation | null, verticalMediaOrientation?: Types.VerticalMediaOrientation | null, verticalMediaAlignment?: Types.VerticalMediaAlignment | null, horizontalMediaAlignment?: Types.HorizontalMediaAlignment | null, height?: number | null, imageWidth?: string | null, canDismiss?: boolean | null, borderColor?: string | null, borderRadius?: number | null, padding?: number | null, advancedPadding?: string | null, ctasOrientation?: Types.CtasOrientation | null, mediaFontSize?: number | null, mediaTextColor?: string | null } | { __typename?: 'CarouselStyle', backgroundColor?: string | null, textColor?: string | null, canDismiss?: boolean | null, height?: number | null, imageWidth?: string | null, dotsColor?: string | null, stepBodyOrientation?: Types.StepBodyOrientation | null, mediaOrientation?: Types.MediaOrientation | null, borderColor?: string | null, borderRadius?: number | null, padding?: number | null, advancedPadding?: string | null, ctasOrientation?: Types.CtasOrientation | null } | { __typename?: 'ChecklistStyle', stepBodyOrientation?: Types.StepBodyOrientation | null, mediaOrientation?: Types.MediaOrientation | null, hideStepGroupTitle?: boolean | null, hideCompletedSteps?: boolean | null, height?: number | null, imageWidth?: string | null, ctasOrientation?: Types.CtasOrientation | null } | { __typename?: 'ModalStyle', modalSize: Types.ModalSize, position: Types.ModalPosition, hasBackgroundOverlay: boolean, canDismiss?: boolean | null, backgroundColor?: string | null, textColor?: string | null, stepBodyOrientation?: Types.StepBodyOrientation | null, mediaOrientation?: Types.MediaOrientation | null, verticalMediaOrientation?: Types.VerticalMediaOrientation | null, verticalMediaAlignment?: Types.VerticalMediaAlignment | null, horizontalMediaAlignment?: Types.HorizontalMediaAlignment | null, ctasOrientation?: Types.CtasOrientation | null, imageWidth?: string | null, mediaFontSize?: number | null, mediaTextColor?: string | null } | { __typename?: 'TooltipStyle', backgroundColor?: string | null, backgroundOverlayColor?: string | null, backgroundOverlayOpacity?: number | null, hasArrow: boolean, hasBackgroundOverlay: boolean, textColor?: string | null, tooltipShowOn: Types.TooltipShowOn, tooltipSize: Types.TooltipSize, canDismiss?: boolean | null, stepBodyOrientation?: Types.StepBodyOrientation | null, mediaOrientation?: Types.MediaOrientation | null, verticalMediaOrientation?: Types.VerticalMediaOrientation | null, verticalMediaAlignment?: Types.VerticalMediaAlignment | null, horizontalMediaAlignment?: Types.HorizontalMediaAlignment | null, ctasOrientation?: Types.CtasOrientation | null, imageWidth?: string | null, mediaFontSize?: number | null, mediaTextColor?: string | null } | { __typename?: 'VideoGalleryStyle', backgroundColor?: string | null, textColor?: string | null, canDismiss?: boolean | null, borderColor?: string | null, borderRadius?: number | null, padding?: number | null, advancedPadding?: string | null, selectedBackgroundColor?: string | null, statusLabelColor?: string | null } | null, taggedElements: Array<{ __typename?: 'EmbedTaggedElement', entityId: any, wildcardUrl: string, elementSelector: string, type: Types.ContextualTagTypeEnumType, alignment: Types.ContextualTagAlignmentEnumType, xOffset: number, yOffset: number, relativeToText: boolean, tooltipAlignment: Types.ContextualTagTooltipAlignmentEnumType, tooltipTitle: string, isSideQuest: boolean, designType: Types.GuideDesignTypeEnumType, formFactor: Types.GuideFormFactorEnumType, step?: any | null, guide: any, dismissedAt?: any | null, style?: { __typename?: 'VisualTagHighlightSettings', type?: Types.VisualTagHighlightType | null, pulse?: boolean | null, color?: string | null, thickness?: number | null, padding?: number | null, radius?: number | null, opacity?: number | null, text?: string | null } | null }>, guideBase: { __typename?: 'EmbedGuideBase', entityId: any }, stepsInfo: Array<{ __typename: 'EmbedStep', name: string, bodySlate?: any | null }>, stepsByState: { __typename: 'GuideStepsByState', incomplete?: Array<{ __typename?: 'EmbedStep', name: string } | null> | null, complete?: Array<{ __typename?: 'EmbedStep', name: string } | null> | null, skipped?: Array<{ __typename?: 'EmbedStep', name: string } | null> | null, viewed?: Array<{ __typename?: 'EmbedStep', name: string } | null> | null } } | null };


export const GuideChangedDocument = gql`
    subscription GuideChanged($guideEntityId: EntityId!) {
  guideChanged(guideEntityId: $guideEntityId) {
    ...GuideQuery_guide
  }
}
    ${GuideQuery_Guide}`;

export function useGuideChanged<TData = GuideChanged>(options: Omit<Urql.UseSubscriptionArgs<GuideChangedVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<GuideChanged, TData>) {
  return Urql.useSubscription<GuideChanged, TData, GuideChangedVariables>({ query: GuideChangedDocument, ...options }, handler);
};