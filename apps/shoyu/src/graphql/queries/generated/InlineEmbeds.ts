/* Auto-generated by graphql-codegen. Do not edit.  */
/* Make query edits in the corresponding /graphql/*.graphql file */
/* eslint-disable */
import * as Types from '../../schema.types';

import { gql } from 'urql';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type InlineEmbedsQueryVariables = Types.Exact<{ [key: string]: never; }>;


export type InlineEmbedsQuery = { __typename?: 'RootType', inlineEmbeds?: Array<{ __typename?: 'EmbedOrganizationInlineEmbed', entityId: any, url: string, wildcardUrl: string, elementSelector: string, position: Types.InlineEmbedPosition, topMargin: number, rightMargin: number, bottomMargin: number, padding: number, borderRadius: number, leftMargin: number, alignment?: Types.InlineEmbedAlignment | null, maxWidth?: number | null, guide?: any | null } | null> | null };

export type InlineEmbedsQuery_InlineEmbed = { __typename?: 'EmbedOrganizationInlineEmbed', entityId: any, url: string, wildcardUrl: string, elementSelector: string, position: Types.InlineEmbedPosition, topMargin: number, rightMargin: number, bottomMargin: number, padding: number, borderRadius: number, leftMargin: number, alignment?: Types.InlineEmbedAlignment | null, maxWidth?: number | null, guide?: any | null };

export const InlineEmbedsQuery_InlineEmbed = gql`
    fragment InlineEmbedsQuery_inlineEmbed on EmbedOrganizationInlineEmbed {
  entityId
  url
  wildcardUrl
  elementSelector
  position
  topMargin
  rightMargin
  bottomMargin
  padding
  borderRadius
  leftMargin
  alignment
  maxWidth
  guide
}
    `;
export const InlineEmbedsQueryDocument = gql`
    query InlineEmbedsQuery {
  inlineEmbeds {
    ...InlineEmbedsQuery_inlineEmbed
  }
}
    ${InlineEmbedsQuery_InlineEmbed}`;

export function useInlineEmbedsQuery(options?: Omit<Urql.UseQueryArgs<InlineEmbedsQueryVariables>, 'query'>) {
  return Urql.useQuery<InlineEmbedsQuery, InlineEmbedsQueryVariables>({ query: InlineEmbedsQueryDocument, ...options });
};