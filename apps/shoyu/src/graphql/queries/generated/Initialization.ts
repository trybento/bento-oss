/* Auto-generated by graphql-codegen. Do not edit.  */
/* Make query edits in the corresponding /graphql/*.graphql file */
/* eslint-disable */
import * as Types from '../../schema.types';

import { gql } from 'urql';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type InitializationQueryVariables = Types.Exact<{
  withSessionData: Types.Scalars['Boolean'];
}>;


export type InitializationQuery = { __typename?: 'RootType', account?: { __typename?: 'EmbedAccount', externalId?: string | null, name: string }, accountUser?: { __typename?: 'EmbedAccountUser', entityId: any, externalId?: string | null, fullName?: string | null, email?: string | null }, organization?: { __typename?: 'EmbedOrganization', entityId: any, domain?: string | null, name: string }, uiSettings?: { __typename?: 'EmbedOrganizationUISettings', theme: Types.ThemeType, primaryColorHex?: string | null, secondaryColorHex?: string | null, isSecondaryColorDark: boolean, fontColorHex?: string | null, borderColor?: string | null, toggleTextColor: string, isFontColorDark: boolean, embedToggleBehavior: Types.EmbedToggleBehaviorType, backgroundColor?: string | null, sidebarVisibility: Types.SidebarVisibilityType, sidebarAvailability: Types.SidebarAvailabilityType, sidebarBackgroundColor: string, cardBackgroundColor: string, isBackgroundDark: boolean, isSidebarBackgroundDark: boolean, toggleStyle?: string | null, toggleColorHex?: string | null, toggleText?: string | null, sidebarSide?: string | null, sidebarStyle?: string | null, appContainerIdentifier?: string | null, embedCustomCss?: string | null, isEmbedToggleColorInverted?: boolean | null, isSidebarAutoOpenOnFirstViewDisabled: boolean, tagPrimaryColor?: string | null, tagLightPrimaryColor?: string | null, tagTextColor?: string | null, tagDotSize?: number | null, tagPulseLevel?: Types.VisualTagPulseLevelType | null, tagBadgeIconPadding?: number | null, tagBadgeIconBorderRadius?: number | null, tagCustomIconUrl?: string | null, tagVisibility: Types.TagVisibilityType, paragraphFontSize?: number | null, paragraphLineHeight?: number | null, cyoaOptionBackgroundColor?: string | null, cyoaOptionBorderColor: string, cyoaOptionShadow: string, cyoaOptionShadowHover: string, isCyoaOptionBackgroundColorDark: boolean, cyoaTextColor?: string | null, floatingAnchorXOffset: number, floatingAnchorYOffset: number, stepCompletionStyle: string, injectSidebar: boolean, inlineEmptyBehaviour: Types.InlineEmptyBehaviourType, sidebarBlocklistedUrls: Array<string | null>, ticketCreationEnabled: boolean, zendeskChatEnabled: boolean, kbSearchEnabled: boolean, additionalColors: Array<{ __typename?: 'AdditionalColorsType', value: string }>, stepSeparationStyle?: { __typename?: 'StepSeparationStyleType', type: Types.StepSeparationType, boxCompleteBackgroundColor?: string | null, boxActiveStepShadow: Types.ActiveStepShadowType, boxBorderRadius: number } | null, inlineContextualStyle?: { __typename?: 'InlineContextualStyleType', borderColor?: string | null, borderRadius: number, shadow: Types.InlineContextualType, padding: number } | null, modalsStyle?: { __typename?: 'ModalsStyleStyleType', paddingX?: number | null, paddingY?: number | null, shadow?: Types.AnnouncementShadowType | null, borderRadius?: number | null, backgroundOverlayColor?: string | null, backgroundOverlayOpacity?: number | null } | null, tooltipsStyle?: { __typename?: 'TooltipsStyleStyleType', paddingX?: number | null, paddingY?: number | null, shadow?: Types.AnnouncementShadowType | null, borderRadius?: number | null } | null, ctasStyle?: { __typename?: 'CtasStyleStyleType', paddingX?: number | null, paddingY?: number | null, fontSize?: number | null, lineHeight?: number | null, borderRadius?: number | null } | null, bannersStyle?: { __typename?: 'BannersStyleStyleType', padding?: Types.BannerPaddingType | null, shadow?: Types.AnnouncementShadowType | null, borderRadius?: number | null } | null, responsiveVisibility?: { __typename?: 'ResponsiveVisibilityType', all: Types.ResponsiveVisibilityBehaviorType } | null, sidebarHeader: { __typename?: 'GuideHeaderSettingsType', type: Types.GuideHeaderStyleType, closeIcon: Types.GuideHeaderCloseIconType, progressBar?: Types.GuideHeaderProgressBarType | null, showModuleNameInStepView: boolean }, allGuidesStyle: { __typename?: 'AllGuidesStyleType', allGuidesTitle: string, activeGuidesTitle: string, previousGuidesTitle: string, previousAnnouncementsTitle: string }, quickLinks: Array<{ __typename?: 'QuickLink', url: string, title: string, icon?: string | null } | null>, helpCenter?: { __typename?: 'HelpCenter', source: Types.HelpCenterSource, url?: string | null } | null, helpCenterStyle: { __typename?: 'HelpCenterStyle', supportTicketTitle?: string | null, chatTitle?: string | null } } | null };


export const InitializationQueryDocument = gql`
    query InitializationQuery($withSessionData: Boolean!) {
  account @include(if: $withSessionData) {
    externalId
    name
  }
  accountUser @include(if: $withSessionData) {
    entityId
    externalId
    fullName
    email
  }
  organization @include(if: $withSessionData) {
    entityId
    domain
    name
  }
  uiSettings {
    theme
    primaryColorHex
    secondaryColorHex
    isSecondaryColorDark
    fontColorHex
    borderColor
    toggleTextColor
    isFontColorDark
    embedToggleBehavior
    backgroundColor
    sidebarVisibility
    sidebarAvailability
    sidebarBackgroundColor
    cardBackgroundColor
    isBackgroundDark
    isSidebarBackgroundDark
    toggleStyle
    toggleColorHex
    toggleText
    sidebarSide
    sidebarStyle
    additionalColors {
      value
    }
    appContainerIdentifier
    embedCustomCss
    isEmbedToggleColorInverted
    isSidebarAutoOpenOnFirstViewDisabled
    tagPrimaryColor
    tagLightPrimaryColor
    tagTextColor
    tagDotSize
    tagPulseLevel
    tagBadgeIconPadding
    tagBadgeIconBorderRadius
    tagCustomIconUrl
    tagVisibility
    paragraphFontSize
    paragraphLineHeight
    cyoaOptionBackgroundColor
    cyoaOptionBorderColor
    cyoaOptionShadow
    cyoaOptionShadowHover
    isCyoaOptionBackgroundColorDark
    cyoaTextColor
    floatingAnchorXOffset
    floatingAnchorYOffset
    stepCompletionStyle
    stepSeparationStyle {
      type
      boxCompleteBackgroundColor
      boxActiveStepShadow
      boxBorderRadius
    }
    injectSidebar
    inlineEmptyBehaviour
    inlineContextualStyle {
      borderColor
      borderRadius
      shadow
      padding
    }
    modalsStyle {
      paddingX
      paddingY
      shadow
      borderRadius
      backgroundOverlayColor
      backgroundOverlayOpacity
    }
    tooltipsStyle {
      paddingX
      paddingY
      shadow
      borderRadius
    }
    ctasStyle {
      paddingX
      paddingY
      fontSize
      lineHeight
      borderRadius
    }
    bannersStyle {
      padding
      shadow
      borderRadius
    }
    responsiveVisibility {
      all
    }
    sidebarHeader {
      type
      closeIcon
      progressBar
      showModuleNameInStepView
    }
    sidebarBlocklistedUrls
    allGuidesStyle {
      allGuidesTitle
      activeGuidesTitle
      previousGuidesTitle
      previousAnnouncementsTitle
    }
    ticketCreationEnabled
    zendeskChatEnabled
    kbSearchEnabled
    quickLinks {
      url
      title
      icon
    }
    helpCenter {
      source
      url
    }
    helpCenterStyle {
      supportTicketTitle
      chatTitle
    }
  }
}
    `;

export function useInitializationQuery(options: Omit<Urql.UseQueryArgs<InitializationQueryVariables>, 'query'>) {
  return Urql.useQuery<InitializationQuery, InitializationQueryVariables>({ query: InitializationQueryDocument, ...options });
};