/* Auto-generated by graphql-codegen. Do not edit.  */
/* Make query edits in the corresponding /graphql/*.graphql file */
/* eslint-disable */
import * as Types from '../../schema.types';

import { gql } from 'urql';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type AnswerNpsSurveyMutationVariables = Types.Exact<{
  input: Types.AnswerNpsSurveyInput;
}>;


export type AnswerNpsSurveyMutation = { __typename?: 'Mutation', answerNpsSurvey?: { __typename?: 'AnswerNpsSurveyPayload', errors?: Array<string> | null, npsSurvey?: { __typename?: 'EmbedNpsSurvey', entityId: any, answeredAt?: any | null } | null } | null };


export const AnswerNpsSurveyMutationDocument = gql`
    mutation AnswerNpsSurveyMutation($input: AnswerNpsSurveyInput!) {
  answerNpsSurvey(input: $input) {
    errors
    npsSurvey {
      entityId
      answeredAt
    }
  }
}
    `;

export function useAnswerNpsSurveyMutation() {
  return Urql.useMutation<AnswerNpsSurveyMutation, AnswerNpsSurveyMutationVariables>(AnswerNpsSurveyMutationDocument);
};