/* Auto-generated by graphql-codegen. Do not edit.  */
/* Make query edits in the corresponding /graphql/*.graphql file */
/* eslint-disable */
import * as Types from '../../schema.types';

import { gql } from 'urql';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type RecordTagDismissedMutationVariables = Types.Exact<{
  input: Types.RecordTagDismissedInput;
}>;


export type RecordTagDismissedMutation = { __typename?: 'Mutation', recordTagDismissed?: { __typename?: 'RecordTagDismissedPayload', tag?: { __typename: 'EmbedTaggedElement', id: string } | null } | null };


export const RecordTagDismissedMutationDocument = gql`
    mutation RecordTagDismissedMutation($input: RecordTagDismissedInput!) {
  recordTagDismissed(input: $input) {
    tag {
      __typename
      id
    }
  }
}
    `;

export function useRecordTagDismissedMutation() {
  return Urql.useMutation<RecordTagDismissedMutation, RecordTagDismissedMutationVariables>(RecordTagDismissedMutationDocument);
};