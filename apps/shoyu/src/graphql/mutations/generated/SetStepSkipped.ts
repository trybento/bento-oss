/* Auto-generated by graphql-codegen. Do not edit.  */
/* Make query edits in the corresponding /graphql/*.graphql file */
/* eslint-disable */
import * as Types from '../../schema.types';

import { gql } from 'urql';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type SetStepSkippedMutationVariables = Types.Exact<{
  input: Types.SetStepSkippedInput;
}>;


export type SetStepSkippedMutation = { __typename?: 'Mutation', setStepSkipped?: { __typename?: 'SetStepSkippedPayload', errors?: Array<string> | null } | null };


export const SetStepSkippedMutationDocument = gql`
    mutation SetStepSkippedMutation($input: SetStepSkippedInput!) {
  setStepSkipped(input: $input) {
    errors
  }
}
    `;

export function useSetStepSkippedMutation() {
  return Urql.useMutation<SetStepSkippedMutation, SetStepSkippedMutationVariables>(SetStepSkippedMutationDocument);
};