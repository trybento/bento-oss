/* Auto-generated by graphql-codegen. Do not edit. */
/* Make query edits in the corresponding /graphql/*.graphql file */
/* eslint-disable */
import * as Types from '../../schema.types';

import { gql } from 'urql';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type VisualBuilderSessionQueryVariables = Types.Exact<{
  visualBuilderSessionEntityId: Types.Scalars['EntityId']['input'];
}>;


export type VisualBuilderSessionQuery = { __typename?: 'RootType', organizationDomain?: string | null, enabledFeatureFlags: Array<string>, visualBuilderSession?: { __typename?: 'VisualBuilderSession', entityId: any, type: Types.VisualBuilderSessionType, initialData: any, progressData?: any | null, previewData?: any | null, state: Types.VisualBuilderSessionState } | null, uiSettings?: { __typename?: 'OrganizationUISettings', embedBackgroundHex?: string | null, primaryColorHex?: string | null, secondaryColorHex?: string | null, fontColorHex?: string | null, theme: Types.ThemeType, cyoaOptionBackgroundColor?: string | null, isCyoaOptionBackgroundColorDark: boolean, cyoaTextColor?: string | null, borderColor?: string | null, tagDotSize?: number | null, tagBadgeIconBorderRadius?: number | null, tagBadgeIconPadding?: number | null, tagPrimaryColor?: string | null, tagCustomIconUrl?: string | null, tagTextColor?: string | null, tagPulseLevel?: Types.VisualTagPulseLevelType | null, tagVisibility: Types.TagVisibilityType, additionalColors: Array<{ __typename?: 'AdditionalColorsType', value: string }>, modalsStyle?: { __typename?: 'ModalsStyleStyleType', paddingX?: number | null, paddingY?: number | null, shadow?: Types.AnnouncementShadowType | null, borderRadius?: number | null, backgroundOverlayColor?: string | null, backgroundOverlayOpacity?: number | null } | null } | null, attributes: Array<{ __typename?: 'Attribute', type?: Types.AttributeType | null, name: string, valueType: Types.AttributeValueType }> };


export const VisualBuilderSessionQueryDocument = gql`
    query VisualBuilderSessionQuery($visualBuilderSessionEntityId: EntityId!) {
  visualBuilderSession: findVisualBuilderSession(
    entityId: $visualBuilderSessionEntityId
  ) {
    entityId
    type
    initialData
    progressData
    previewData
    state
  }
  organizationDomain
  uiSettings {
    embedBackgroundHex
    primaryColorHex
    secondaryColorHex
    additionalColors {
      value
    }
    fontColorHex
    theme
    cyoaOptionBackgroundColor
    isCyoaOptionBackgroundColorDark
    cyoaTextColor
    borderColor
    tagDotSize
    tagBadgeIconBorderRadius
    tagBadgeIconPadding
    tagPrimaryColor
    tagCustomIconUrl
    tagTextColor
    tagPulseLevel
    tagVisibility
    modalsStyle {
      paddingX
      paddingY
      shadow
      borderRadius
      backgroundOverlayColor
      backgroundOverlayOpacity
    }
  }
  enabledFeatureFlags
  attributes {
    type
    name
    valueType
  }
}
    `;

export function useVisualBuilderSessionQuery(options: Omit<Urql.UseQueryArgs<VisualBuilderSessionQueryVariables>, 'query'>) {
  return Urql.useQuery<VisualBuilderSessionQuery, VisualBuilderSessionQueryVariables>({ query: VisualBuilderSessionQueryDocument, ...options });
};