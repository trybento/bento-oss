/* Auto-generated by graphql-codegen. Do not edit. */
/* Make query edits in the corresponding /graphql/*.graphql file */
/* eslint-disable */
import * as Types from '../../schema.types';

import { gql } from 'urql';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type UpdateVisualBuilderSessionMutationVariables = Types.Exact<{
  input: Types.UpdateVisualBuilderSessionInput;
}>;


export type UpdateVisualBuilderSessionMutation = { __typename?: 'Mutation', updateVisualBuilderSession?: { __typename?: 'UpdateVisualBuilderSessionPayload', errors?: Array<string> | null, visualBuilderSession?: { __typename?: 'VisualBuilderSession', entityId: any } | null } | null };


export const UpdateVisualBuilderSessionMutationDocument = gql`
    mutation UpdateVisualBuilderSessionMutation($input: UpdateVisualBuilderSessionInput!) {
  updateVisualBuilderSession(input: $input) {
    errors
    visualBuilderSession {
      entityId
    }
  }
}
    `;

export function useUpdateVisualBuilderSessionMutation() {
  return Urql.useMutation<UpdateVisualBuilderSessionMutation, UpdateVisualBuilderSessionMutationVariables>(UpdateVisualBuilderSessionMutationDocument);
};