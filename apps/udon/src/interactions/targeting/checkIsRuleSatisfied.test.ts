import { addDays, subHours } from 'date-fns';
import { RuleTypeEnum, TargetValueType } from 'bento-common/types';
import { TemplateAttribute } from 'bento-common/types/targeting';
import {
  checkIsRuleSatisfied,
  checkValueTypeSupportsOperator,
} from './checkIsRuleSatisfied';

describe('checkValueTypeSupportsOperator', () => {
  test('returns true if operator is supported', () => {
    const result = checkValueTypeSupportsOperator(
      TargetValueType.text,
      RuleTypeEnum.equals
    );
    expect(result).toEqual(true);
  });

  test('returns false if operator is NOT supported', () => {
    const result = checkValueTypeSupportsOperator(
      TargetValueType.boolean,
      RuleTypeEnum.gt
    );
    expect(result).toEqual(false);
  });

  test('returns false if type is unknown', () => {
    const result = checkValueTypeSupportsOperator(
      'unknownType' as TargetValueType,
      RuleTypeEnum.equals
    );
    expect(result).toEqual(false);
  });
});

describe('checkIsRuleSatisfied', () => {
  describe('throws if operator is not supported', () => {
    const t = () => {
      checkIsRuleSatisfied({
        rule: {
          valueType: TargetValueType.boolean,
          attribute: 'foo',
          ruleType: RuleTypeEnum.gt,
          value: 'bar',
        },
        attributes: {},
      });
    };
    expect(t).toThrow(Error);
  });
  test.each([
    // ******************** String tests
    [TargetValueType.text, 'name', undefined, RuleTypeEnum.isEmpty, null, true],
    [
      TargetValueType.text,
      'name',
      'bar',
      RuleTypeEnum.isEmpty,
      undefined,
      false,
    ],
    [
      TargetValueType.text,
      'name',
      undefined,
      RuleTypeEnum.isEmpty,
      undefined,
      true,
    ],
    [
      TargetValueType.text,
      'name',
      'bar',
      RuleTypeEnum.isNotEmpty,
      undefined,
      true,
    ],
    [
      TargetValueType.text,
      'name',
      'baz',
      RuleTypeEnum.isNotEmpty,
      undefined,
      true,
    ],
    [
      TargetValueType.text,
      'name',
      undefined,
      RuleTypeEnum.isNotEmpty,
      null,
      false,
    ],
    [TargetValueType.text, 'name', 'foo', RuleTypeEnum.equals, 'foo', true],
    [TargetValueType.text, 'name', 'bar', RuleTypeEnum.equals, 'foo', false],
    [
      TargetValueType.text,
      'name',
      undefined,
      RuleTypeEnum.equals,
      'foo',
      false,
    ],
    [TargetValueType.text, 'name', 'foo', RuleTypeEnum.notEquals, 'foo', false],
    [TargetValueType.text, 'name', 'bar', RuleTypeEnum.notEquals, 'foo', true],
    [
      TargetValueType.text,
      'name',
      undefined,
      RuleTypeEnum.notEquals,
      'foo',
      true,
    ],
    [
      TargetValueType.text,
      'name',
      'foo',
      RuleTypeEnum.stringContains,
      'f',
      true,
    ],
    [
      TargetValueType.text,
      'name',
      'foo',
      RuleTypeEnum.stringContains,
      'o',
      true,
    ],
    [
      TargetValueType.text,
      'name',
      'foo',
      RuleTypeEnum.stringContains,
      'oo',
      true,
    ],
    [
      TargetValueType.text,
      'name',
      'foo',
      RuleTypeEnum.stringContains,
      'b',
      false,
    ],
    [
      TargetValueType.text,
      'name',
      undefined,
      RuleTypeEnum.stringContains,
      'f',
      false,
    ],
    [
      TargetValueType.text,
      'name',
      'foo',
      RuleTypeEnum.stringDoesNotContain,
      'f',
      false,
    ],
    [
      TargetValueType.text,
      'name',
      'foo',
      RuleTypeEnum.stringDoesNotContain,
      'o',
      false,
    ],
    [
      TargetValueType.text,
      'name',
      'foo',
      RuleTypeEnum.stringDoesNotContain,
      'oo',
      false,
    ],
    [
      TargetValueType.text,
      'name',
      'foo',
      RuleTypeEnum.stringDoesNotContain,
      'b',
      true,
    ],
    [
      TargetValueType.text,
      'name',
      undefined,
      RuleTypeEnum.stringDoesNotContain,
      'f',
      true,
    ],

    // ******************** Boolean tests
    [
      TargetValueType.boolean,
      'active',
      false,
      RuleTypeEnum.equals,
      false,
      true,
    ],
    [TargetValueType.boolean, 'active', true, RuleTypeEnum.equals, true, true],
    [
      TargetValueType.boolean,
      'active',
      false,
      RuleTypeEnum.equals,
      true,
      false,
    ],
    [
      TargetValueType.boolean,
      'active',
      true,
      RuleTypeEnum.equals,
      false,
      false,
    ],
    [
      TargetValueType.boolean,
      'active',
      undefined,
      RuleTypeEnum.equals,
      true,
      false,
    ],
    [
      TargetValueType.boolean,
      'active',
      undefined,
      RuleTypeEnum.equals,
      false,
      false,
    ],
    [
      TargetValueType.boolean,
      'active',
      true,
      RuleTypeEnum.notEquals,
      true,
      false,
    ],
    [
      TargetValueType.boolean,
      'active',
      false,
      RuleTypeEnum.notEquals,
      false,
      false,
    ],
    [
      TargetValueType.boolean,
      'active',
      true,
      RuleTypeEnum.notEquals,
      false,
      true,
    ],
    [
      TargetValueType.boolean,
      'active',
      false,
      RuleTypeEnum.notEquals,
      true,
      true,
    ],
    [
      TargetValueType.boolean,
      'active',
      undefined,
      RuleTypeEnum.notEquals,
      false,
      true,
    ],
    [
      TargetValueType.boolean,
      'active',
      undefined,
      RuleTypeEnum.notEquals,
      true,
      true,
    ],

    // **************** Number tests
    [TargetValueType.number, 'count', 0, RuleTypeEnum.equals, 0, true],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.equals, 10, true],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.equals, 0, false],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.equals, 10, false],
    [
      TargetValueType.number,
      'count',
      undefined,
      RuleTypeEnum.equals,
      10,
      false,
    ],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.equals, 0, false],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.notEquals, 0, false],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.notEquals, 10, false],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.notEquals, 0, true],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.notEquals, 10, true],
    [
      TargetValueType.number,
      'count',
      undefined,
      RuleTypeEnum.notEquals,
      0,
      true,
    ],
    [
      TargetValueType.number,
      'count',
      undefined,
      RuleTypeEnum.notEquals,
      10,
      true,
    ],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.lt, 0, false],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.lt, 10, true],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.lt, 10, false],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.lt, 0, false],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.lt, 0, false],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.lt, 10, false],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.lte, 0, true],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.lte, 10, true],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.lte, 10, true],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.lte, 0, false],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.lte, 0, false],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.lte, 10, false],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.gt, 0, false],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.gt, 10, false],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.gt, 10, false],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.gt, 0, true],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.gt, 0, false],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.gt, 10, false],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.gte, 0, true],
    [TargetValueType.number, 'count', 0, RuleTypeEnum.gte, 10, false],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.gte, 10, true],
    [TargetValueType.number, 'count', 10, RuleTypeEnum.gte, 0, true],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.gte, 0, false],
    [TargetValueType.number, 'count', undefined, RuleTypeEnum.gte, 10, false],

    // Explicitly check decimals
    [TargetValueType.number, 'count', 0.1, RuleTypeEnum.equals, 1.2, false],
    [TargetValueType.number, 'count', 0.8, RuleTypeEnum.equals, 0.8, true],

    [TargetValueType.number, 'count', 10.4, RuleTypeEnum.notEquals, 9, true],
    [TargetValueType.number, 'count', 5.6, RuleTypeEnum.notEquals, 5.6, false],

    [TargetValueType.number, 'count', 0, RuleTypeEnum.lt, 1.5, true],
    [TargetValueType.number, 'count', 0.1, RuleTypeEnum.lt, 0.05, false],

    [TargetValueType.number, 'count', 8.6, RuleTypeEnum.lte, 8.5, false],
    [TargetValueType.number, 'count', 9.4, RuleTypeEnum.lte, 9.4, true],

    [TargetValueType.number, 'count', 11.1, RuleTypeEnum.gt, 12.3, false],
    [TargetValueType.number, 'count', 9.9, RuleTypeEnum.gt, 9.89, true],

    [TargetValueType.number, 'count', 95.6, RuleTypeEnum.gte, 97, false],
    [TargetValueType.number, 'count', 45.2, RuleTypeEnum.gte, 42.3, true],

    // ********************** Date tests
    [
      TargetValueType.date,
      'createdAt',
      new Date('2023-03-08 10:00:00.000'),
      RuleTypeEnum.lt,
      new Date('2023-03-08 10:00:00.000'),
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      new Date('2023-03-08 01:00:00.000'),
      RuleTypeEnum.lt,
      new Date('2023-03-08 10:00:00.000'),
      true,
    ],
    [
      TargetValueType.date,
      'createdAt',
      new Date('2023-03-08 10:00:00.000'),
      RuleTypeEnum.lt,
      new Date('2023-03-08 01:00:00.000'),
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      undefined,
      RuleTypeEnum.lt,
      new Date('2023-03-08 01:00:00.000'),
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      new Date('2023-03-08 10:00:00.000'),
      RuleTypeEnum.gt,
      new Date('2023-03-08 10:00:00.000'),
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      new Date('2023-03-08 01:00:00.000'),
      RuleTypeEnum.gt,
      new Date('2023-03-08 10:00:00.000'),
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      new Date('2023-03-08 10:00:00.000'),
      RuleTypeEnum.gt,
      new Date('2023-03-08 01:00:00.000'),
      true,
    ],
    [
      TargetValueType.date,
      'createdAt',
      undefined,
      RuleTypeEnum.gt,
      new Date('2023-03-08 01:00:00.000'),
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), -3),
      RuleTypeEnum.relativeExactly,
      3,
      true,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), -1),
      RuleTypeEnum.relativeExactly,
      3,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), 1),
      RuleTypeEnum.relativeExactly,
      3,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      undefined,
      RuleTypeEnum.relativeExactly,
      3,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), -1),
      RuleTypeEnum.relativeLessThan,
      3,
      true,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), 1),
      RuleTypeEnum.relativeLessThan,
      3,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), -3),
      RuleTypeEnum.relativeLessThan,
      3,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), -3),
      RuleTypeEnum.relativeLessThan,
      1,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      undefined,
      RuleTypeEnum.relativeLessThan,
      3,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      subHours(new Date(), 6),
      RuleTypeEnum.relativeLessThan,
      3,
      true,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), -1),
      RuleTypeEnum.relativeMoreThan,
      3,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), -3),
      RuleTypeEnum.relativeMoreThan,
      3,
      true,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), -3),
      RuleTypeEnum.relativeMoreThan,
      1,
      true,
    ],
    [
      TargetValueType.date,
      'createdAt',
      addDays(new Date(), 3),
      RuleTypeEnum.relativeMoreThan,
      1,
      false,
    ],
    [
      TargetValueType.date,
      'createdAt',
      undefined,
      RuleTypeEnum.relativeMoreThan,
      3,
      false,
    ],

    // ***************** Template tests
    [
      TargetValueType.template,
      TemplateAttribute.TemplateReceived,
      undefined,
      RuleTypeEnum.equals,
      '53c88914-75f2-4d26-b9e4-9650a7c277d4',
      true,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateReceived,
      undefined,
      RuleTypeEnum.equals,
      '00e00b95-3ae5-4a19-8d06-e2636dbf4f00',
      false,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateReceived,
      undefined,
      RuleTypeEnum.equals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      false,
      [],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateReceived,
      undefined,
      RuleTypeEnum.equals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      false,
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateReceived,
      undefined,
      RuleTypeEnum.notEquals,
      '53c88914-75f2-4d26-b9e4-9650a7c277d4',
      false,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateReceived,
      undefined,
      RuleTypeEnum.notEquals,
      '00e00b95-3ae5-4a19-8d06-e2636dbf4f00',
      true,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateReceived,
      undefined,
      RuleTypeEnum.notEquals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      true,
      [],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateReceived,
      undefined,
      RuleTypeEnum.notEquals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      true,
    ],

    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.equals,
      '53c88914-75f2-4d26-b9e4-9650a7c277d4',
      true,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.equals,
      '00e00b95-3ae5-4a19-8d06-e2636dbf4f00',
      false,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.equals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      false,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.equals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      false,
      [],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.equals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      false,
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.notEquals,
      '53c88914-75f2-4d26-b9e4-9650a7c277d4',
      false,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.notEquals,
      '00e00b95-3ae5-4a19-8d06-e2636dbf4f00',
      true,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.notEquals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      true,
      [
        {
          templateEntityId: '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
          completed: false,
        },
        {
          templateEntityId: '53c88914-75f2-4d26-b9e4-9650a7c277d4',
          completed: true,
        },
        {
          templateEntityId: 'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
          completed: true,
        },
      ],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.notEquals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      true,
      [],
    ],
    [
      TargetValueType.template,
      TemplateAttribute.TemplateCompleted,
      undefined,
      RuleTypeEnum.notEquals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      true,
    ],

    // ***************** Branching tests
    [
      TargetValueType.branchingPath,
      'branchingSelection',
      undefined,
      RuleTypeEnum.equals,
      '53c88914-75f2-4d26-b9e4-9650a7c277d4',
      true,
      undefined,
      [
        '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
        '53c88914-75f2-4d26-b9e4-9650a7c277d4',
        'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
      ],
    ],
    [
      TargetValueType.branchingPath,
      'branchingSelection',
      undefined,
      RuleTypeEnum.equals,
      '00e00b95-3ae5-4a19-8d06-e2636dbf4f00',
      false,
      undefined,
      [
        '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
        '53c88914-75f2-4d26-b9e4-9650a7c277d4',
        'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
      ],
    ],
    [
      TargetValueType.branchingPath,
      'branchingSelection',
      undefined,
      RuleTypeEnum.equals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      false,
      undefined,
      [],
    ],
    [
      TargetValueType.branchingPath,
      'branchingSelection',
      undefined,
      RuleTypeEnum.equals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      false,
    ],
    [
      TargetValueType.branchingPath,
      'branchingSelection',
      undefined,
      RuleTypeEnum.notEquals,
      '53c88914-75f2-4d26-b9e4-9650a7c277d4',
      false,
      undefined,
      [
        '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
        '53c88914-75f2-4d26-b9e4-9650a7c277d4',
        'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
      ],
    ],
    [
      TargetValueType.branchingPath,
      'branchingSelection',
      undefined,
      RuleTypeEnum.notEquals,
      '00e00b95-3ae5-4a19-8d06-e2636dbf4f00',
      true,
      undefined,
      [
        '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
        '53c88914-75f2-4d26-b9e4-9650a7c277d4',
        'dd6ab291-c4bf-4ed3-a66a-79db50aa4fd1',
      ],
    ],
    [
      TargetValueType.branchingPath,
      'branchingSelection',
      undefined,
      RuleTypeEnum.notEquals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      true,
      undefined,
      [],
    ],
    [
      TargetValueType.branchingPath,
      'branchingSelection',
      undefined,
      RuleTypeEnum.notEquals,
      '77e00b95-3ae5-4a19-8d06-e2636dbf4f08',
      true,
    ],

    // *************** Array tests
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.any,
      ['one'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.any,
      ['one', 'two'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.any,
      ['two', 'three'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.any,
      ['three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one'],
      RuleTypeEnum.any,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      [],
      RuleTypeEnum.any,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      undefined,
      RuleTypeEnum.any,
      ['one'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.all,
      ['one'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.all,
      ['one', 'two'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.all,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.all,
      ['three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one'],
      RuleTypeEnum.all,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      [],
      RuleTypeEnum.all,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      undefined,
      RuleTypeEnum.all,
      ['one'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.only,
      ['one'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.only,
      ['one', 'two'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.only,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.only,
      ['three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one'],
      RuleTypeEnum.only,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      [],
      RuleTypeEnum.only,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      undefined,
      RuleTypeEnum.only,
      ['one'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.none,
      ['one'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.none,
      ['one', 'two'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.none,
      ['two', 'three'],
      false,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one', 'two'],
      RuleTypeEnum.none,
      ['three'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      ['one'],
      RuleTypeEnum.none,
      ['two', 'three'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      [],
      RuleTypeEnum.none,
      ['two', 'three'],
      true,
    ],
    [
      TargetValueType.stringArray,
      'cohorts',
      undefined,
      RuleTypeEnum.none,
      ['one'],
      true,
    ],
  ])(
    '"%s" attribute "%s" expects "%s" %s "%s" to be a match: %s, templates: %s, branchingSelections: %s',
    (
      valueType,
      attribute,
      attributeValue,
      ruleType,
      ruleValue,
      matches,
      templates = undefined,
      branchingSelections = undefined
    ) => {
      const result = checkIsRuleSatisfied({
        rule: {
          valueType,
          attribute,
          ruleType,
          value: ruleValue as TargetValueType,
        },
        attributes: { [attribute]: attributeValue },
        extraAttributes: {
          templates,
          branchingSelections,
        },
      });
      expect(result).toBe(matches);
    }
  );
});
